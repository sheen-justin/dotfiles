wget https://noto-website.storage.googleapis.com/pkgs/NotoColorEmoji-unhinted.zip
sudo mkdir -p /usr/local/share/fonts/truetype
sudo unzip NotoColorEmoji-unhinted.zip -d /usr/local/share/fonts/truetype/noto
sudo rm /usr/local/share/fonts/truetype/noto/LICENSE_OFL.txt
sudo apt-get remove ttf-ancient-fonts-symbola fonts-symbola
sudo chmod 644 /usr/local/share/fonts/truetype/noto/NotoColorEmoji.ttf
fc-cache -f -v
rm NotoColorEmoji-unhinted.zip
sudo apt-get install gnome-tweak-tool
gnome-tweak-tool
sudo apt-get install ttf-ancient-fonts-symbola fonts-symbola
fc-cache -f -v
rm .config/fontconfig/fonts.conf
fc-cache -f -v
upgrade
upgrade
sudo apt autoremove
ls
ll
.mozilla
ls
firefox
cd firefox
ls
vi profiles.ini
..
ls
ll
..
ls
ll
.config
ls
..
ll
.mozilla
ls
extensions
ls
..
systemextensionsdev
ls
..
firefox/
ls
wn2rerov.default
ls
mkdir chrome
vi chrome/userChrome.css
.mozilla/firefox/wn2rerov.default/chrome
ls
vi userChrome.css
upgrade
upgrade
sudo upgrade
upgrade
exit
upgrade
upgrade
sudo apt autoremove
upgrade
ssh mahecsc@50.63.219.37
ssh mahecsc@50.63.219.37 Mark201*#
ssh mahecsc@50.63.219.37 Mark2018#
ssh mahecsc@50.63.219.37
ftp mahecsc@50.63.219.37
ftp
man ftp
ftp 50.63.219.37
ftp 50.63.219.37 21
ssh
ssh mahecsc@50.63.219.37
ls
upgrade
sudo apt autoremove
upgrade
upgrade
sudo apt autoremove
upgrade
upgrade
screenfetch
vi .zshrc
source .zshrc
ll
ll .zsh
vi .vimrc
uname -sr
ll
ls
downloads
Downloads
ls
mkdir kernels
kernel
kernels
ls
mkdir 4.15
cd 4.15
ls
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.15/linux-headers-4.15.0-041500_4.15.0-041500.201801282230_all.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.15/linux-headers-4.15.0-041500-generic_4.15.0-041500.201801282230_amd64.deb
ll
ll
sudo dpkg -i *.deb
uname -ssr
uname -sr
upgrade
screenfetch
upgrade
telnet 165.110.198.69 520
ping 165.110.198.69
sudo add-apt-repository ppa:team-xbmc/ppa
update
upgrade
sudo apt install python python-psutil python-pexpect python-notify2 acestream-engine vlc
sudo apt autoremovev
sudo apt autoremove
git clone https://github.com/jonian/acestream-launcher.git
acestream-launcher
ls
sudo zsh install.sh
sudo bash ./install.sh
acestream-launcher acestream://56a768a5534685439bd55d8540eaf136487472e4
acestream-launcher acestream://a5944fbbdad91e9674476b9f288292663b290580
sudo acestream://a5944fbbdad91e9674476b9f288292663b290580
sudo acestream-launcher acestream://a5944fbbdad91e9674476b9f288292663b290580
upgrade
upgrade
..
upgrade
upgrade
ping 8.8.88
ping 8.8.8.8
upgrade
upgrade
sudo apt autoremove
grub
grub-reboot
grub-reboot -h
upgrade
upgrade
upgrade
sudo apt autoremove
grub
upgrade
upgrade
upgrade
update
upgrade
upgrade
upgrade
upgrade
steam GDK_SCALE=2
ls
..
ll
sheen
ll
.steam
ls
bin
ls
cd
GDK_SCALE=2 steam
ssh sjustin@ca1danube.sba.gov
install sqldeveloper-package
upgrade
Downloads
ls
ls ColdFusion_2018_WWEJ_linux64.bin
chmod u+x ColdFusion_2018_WWEJ_linux64.bin
ls ColdFusion_2018_WWEJ_linux64.bin
sudo ColdFusion_2018_WWEJ_linux64.bin
sudo ./ColdFusion_2018_WWEJ_linux64.bin
wine ColdFusion_2018_WWEJ_win64.exe
wine ColdFusion_2018_WWEJ_win64.exe
sudo wine ColdFusion_2018_WWEJ_win64.exe
wine ColdFusion_2018_WWEJ_win64.exe
ll
screenfetch
upgrade
crontab -e
crontab -l
crontab -e
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -sudo apt-get install -y nodejs
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash --sudo apt-get install -y nodejs
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash apt-get install -y nodejs
curl -sL https://deb.nodesource.com/setup_8.x
curl -sL https://deb.nodesource.com/setup_8.x > setup_8.x
ll
sudo apt install ./setup_8.x
sudo apt install -y ./setup_8.x
sudo apt install -y ./setup_8.x nodejs
sudo apt-get install -y ./setup_8.x nodejs
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -sudo apt-get install -y nodejs
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -sudo apt-get install -y nodejs
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
sudo apt-get install -y nodejs
nodejs
node -v
npm -v
man nodejs
l
ls
vi /opt/coldfusion2018/cfusion/wwwroot/cf_scripts/cfclient/useragent.cfm
pwd
mkdir www
mkdir node
cd node
ll
vi index.js
node index.js
npm init
..
mv ./node ./leaflet-test
mv -d ./node ./leaflet-test
mv -d node leaflet-test
ll node/
ll node/
rm node/*
rm node
rm -d node
mkdir leaflet-test
cd leaflet-test
npm init
vi index.js
ll
npm install express --save
ll
ll node_modules
ll
clear
ll
npm install leaflet-headless --save
npm install leaflet
npm install leaflet --save
npm install leaflet-headless --save
npm test
npm install cairo
npm install cairo --save
sudo apt-get install libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++
npm install jsdom --save
npm install node-canvas --save
npm install canvas --save
npm install leaflet-headless
vi index.js
vi index.js
ll
vi index.js
npm install leaflet-image --save
vi index.js
vi index.js
vi index.js
leaflet-test
ll
man npm
npm --help
npm install -h
zip -r ejs-test ejs-test.zip
man zip
zip -r ejs-test.zip ejs-test
ll
rm ejs-test.zip
zip -r ejs-test.zip ejs-test
rm ejs-test.zip
ejs-test
ll
zip -r ../ejs-test.zip *
grep -lri libpangocairo-1.0.so /
find / -name "libpango*"
sudo find / -name "libpango*"
sudo find / -name "libpangocairo*"
ll /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so.0
cp -pi /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so.0.3800.1 ~/ejs-test/libpangocairo-1.0.so.0
zip -r ../ejs-test.zip *
rm ../ejs-test.zip
zip -r ../ejs-test.zip *
ll /usr/lib/x86_64-linux-gnu/libpango-1.0.so.0
cp -pi /usr/lib/x86_64-linux-gnu/libpango-1.0.so.0 ~/ejs-test/libpango-1.0.so.0
rm ../ejs-test.zip
zip -r ../ejs-test.zip *
ll /usr/lib/x86_64-linux-gnu/libjpeg.so.8
cp -pi /usr/lib/x86_64-linux-gnu/libjpeg.so.8.0.2 ~/ejs-test/libjpeg.so.8
rm ../ejs-test.zip
zip -r ../ejs-test.zip *
ll /usr/lib/x86_64-linux-gnu/libgif.so.7
cp -pi /usr/lib/x86_64-linux-gnu/libgif.so.7.0.0 ~/ejs-test/libgif.so.7
rm ../ejs-test.zip
zip -r ../ejs-test.zip *
ll /usr/lib/x86_64-linux-gnu/libpangoft2-1.0.so.0
cp -pi /usr/lib/x86_64-linux-gnu/libpangoft2-1.0.so.0.3800.1 ~/ejs-test/libpangoft2-1.0.so.0
rm ../ejs-test.zip
zip -r ../ejs-test.zip *
ll /usr/lib/x86_64-linux-gnu/libthai.so.0
cp -pi /usr/lib/x86_64-linux-gnu/libthai.so.0.2.4 ~/ejs-test/libthai.so.0
rm ../ejs-test.zip
zip -r ../ejs-test.zip *
ll /usr/lib/x86_64-linux-gnu/libharfbuzz.so.0
cp -pi /usr/lib/x86_64-linux-gnu/libharfbuzz.so.0.10000.1 ~/ejs-test/libharfbuzz.so.0
rm ../ejs-test.zip
zip -r ../ejs-test.zip *
ll
ll /usr/lib/x86_64-linux-gnu/libdatrie.so.1
cp -pi /usr/lib/x86_64-linux-gnu/libdatrie.so.1.3.3 ~/ejs-test/libdatrie.so.1
rm ../ejs-test.zip
zip -r ../ejs-test.zip *
ll /usr/lib/x86_64-linux-gnu/libgraphite2.so.3
cp -pi /usr/lib/x86_64-linux-gnu/libgraphite2.so.3.0.1 .
ll
rm libgraphite2.so.3.0.1
cp -pi /usr/lib/x86_64-linux-gnu/libgraphite2.so.3 .
ll
rm ../ejs-test.zip
zip -r ../ejs-test.zip *
..
mkdir leaflet2
leaflet2
ll
cp -pi ../ejs-test/*.so.* .
ll
npm init
ll
npm install jsdom
npm install canvas
npm install leaflet
npm install leaflet-image
npm install leaflet-headless
vi index.js
cp -pi ../ejs-test/leaflet.js .
ll
cp -pi ../leaflet-test/index.js .
ll
zip -r ../leaflet.zip *
vi ../leaflet-test/index.js
zip -r ../leaflet.zip *
install python-pip
install python-pip
pip install aws-sam-cli
pip install --upgrade pip
cd leaflet-test
ll
node index.js
l
ll
..
mkdir ejs-test
ejs-test
ll
npm init
ll
vi server.js
npm install ejs
npm install express
npm install compression
mkdir www
ll
vi www/index.ejs
node server.js
node server.js
mkdir includes
rm -d includes
ll
mkdir www/includes
npm install nodemon
nodemon server.js
npm install -g nodemon
sudo npm install -g nodemon
nodemon server.js
nodemon server.js
npm install leaflet-headless
npm install leaflet-image
nodemon server.js
npm install leaflet
npm install canvas
sudo apt-get install libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev build-essential g++
npm install canvas
nodemon server.js
nodemon server.js
vi ../leaflet-test/package.json
npm install jsdom
nodemon server.js
ll www
nodemon server.js
nodemon server.js
nodemon server.js
..
rm leaflet.zip
leaflet2
ll
zip -r ../leaflet.zip *
rn ../leaflet.zip
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
ll
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
node index.js
install python
install pip
sudo apt autoremove
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
npm install leaflet-image
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
zip -r ../leaflet.zip *
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
npm install request
npm install canvas
npm install jsdom
npm install leaflet
npm install leaflet-image
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
rm ../leaflet.zip
zip -r ../leaflet.zip *
..
rm leaflet.zip
mkdir leaflet3
cp -pi leaflet2/*.so.* leaflet3/
cp -pi leaflet2/index.js leaflet3
leaflet3
ll
npm init
npm i jsdom
npm i canvas
npm install request
npm install leaflet
vi package.json
npm install leaflet
npm install leaflet-image
npm install leaflet-headless
ll
vi package-lock.json
..
rm leaflet-test
rm leaflet-test/*
rm -rf leaflet-test/*
rm -d leaflet-test/
mv leaflet3 leaflet-test
sudo mv leaflet3 leaflet-test
ll
leaflet-test
ll
rm ../leaflet-test.zip
zip -r ../leaflet-test.zip *
rm ../leaflet-test.zip
zip -r ../leaflet-test.zip *
rm ../leaflet-test.zip
ll ..
rm ../leaflet3
rm -rf ../leaflet3
ll
ll ..
rm ../leaflet-test.zip
zip -r ../leaflet-test.zip *
vi index.js
rm ../leaflet-test.zip
zip -r ../leaflet-test.zip *
npm -v
node -v
vi index.js
echo "${var}"
echo "{var}"
vi /usr/lib/x86_64-linux-gnu/libcairo.so
cp -pi /usr/lib/x86_64-linux-gnu/libcairo.so.2.11400.6 leaflet2/libcairo.so.2
leaflet
cd leaflet
cd leaflet2
ls
vi index.js
..
leaflet1
ls
vi index.js
cp ../leaflet2/libcairo.so.2 .
ls
vi index.js
zip -r ../leaflet.zip *
install p7zip-full
udisksctl unmount -b /dev/sda1
sudo sgdisk --zap-all /dev/sda1
sudo sgdisk --zap-all /dev/sda
ls
Downloads
ls
./lucee-5.2.9.031-pl0-linux-x64-installer.run
sudo ./lucee-5.2.9.031-pl0-linux-x64-installer.run
dbeaver -vm
Downloads
cp -r ./tickets /opt/lucee/tomcat/webapps/ROOT/
sudo cp -r ./tickets /opt/lucee/tomcat/webapps/ROOT/
ls /opt/lucee/tomcat/webapps/ROOT
ls /opt/lucee/tomcat/webapps/ROOT/tickets
cd /opt/lucee/tomcat/webapps
ls ROOT
ls
ROOT
ls
sudo chmod -g+xr tickets
sudo chmod g+xr tickets
ls
sudo atom
which squirrelsql
/snap/bin/squirrelsql
/snap/bin/
squirrelsql -Dsun.java2d.dpiaware=false
squirrelsql -Dsun.java2d.dpiaware=true
squirrelsql -n
squirrelsql -h
sudo install squirrelsql
~/Downloads
ls
ls -lt
ls -ltr
sudo dpkg -i mysql-workbench-community_8.0.13-1ubuntu18.10_amd64.deb
sudo apt install -f
sudo apt install ./mysql-workbench-community_8.0.13-1ubuntu18.10_amd64.deb
sudo apt install ./mysql-workbench-community_8.0.13-1ubuntu18.10_amd64.deb
sudo apt install ./mysql-workbench-community_8.0.13-1ubuntu18.04_amd64.deb
sudo apt install libcairo2
install update-manager
screenfetch
exit
/sbin/shutdown -r now
sudo /sbin/shutdown -r now
sudo /sbin/shutdown -r now
sudo apt purge gdm gdm3
sudo dpkg --configure -a
sudo apt purge gdm gdm3
sudo apt install gdm3 ubuntu-desktop
screenfetch
sudo apt install gdm3 ubuntu-desktop
update
ifconfig wlan0
lspci
lshw -C network
sudo lshw -C network
ifconfig
ifconfig wlp58s0
iwconfig wlp58s0 essid AlphaOmega-Guest key GuestAccess1
sudo iwconfig wlp58s0 essid AlphaOmega-Guest key GuestAccess1
sudo iwconfig wlp58s0 essid AlphaOmega-Guest key GuestAccess1
upgrade
update
ping 8.8.8.8
update
sudo apt install gdm
pwd
wget http://releases.ubuntu.com/18.04/ubuntu-18.04.1-desktop-amd64.iso
ping releases.ubuntu.com
ping http://releases.ubuntu.com
ping google.com
nmcli dev list iface wlp58s0 | grep IP4.DNS
sudo dpkg-reconfigure resolvconf
ls
nmcli dev list iface wlp58s0 | grep IP4.DNS
sudo dpkg-reconfigure resolvconf
sudo /sbin/shutdown -r now
ping google.com
wget http://91.189.88.166/18.04/ubuntu-18.04.1-desktop-amd64.iso
wget http://91.189.88.160/18.04/ubuntu-18.04.1-desktop-amd64.iso
wget http://91.189.88.160/18.04/ubuntu-18.04.1-desktop-amd64.iso
wget http://91.189.88.23/18.04/ubuntu-18.04.1-desktop-amd64.iso
sudo vi /etc/hosts
wget http://releases.ubuntu.com/18.04/ubuntu-18.04.1-desktop-amd64.iso
pwd
ls
ls -altr
sudo vi /etc/resolv.conf
ping -c rackspace.com
ping -c 3 rackspace.com
update
upgrade
apg-get -f install
sudo apt -f install
update
upgrade
apt list --upgradable
sudo apt upgrade
ls
sudo apt install gdm ubuntu-desktop
sudo apt install gdm3 ubuntu-desktop
gdm3
sudo gdm3
sudo /sbin/shutdown -r now
sudo vi /etc/resolv.conf
dpkg-reconfigure resolvconf
sudo dpkg-reconfigure resolvconf
sudo vi /etc/resolv.conf
sudo vi /etc/resolv.conf
ls
ll
ls -altr
pwd
ls /mnt/c/Users/Sheen/Downloads/dotfiles/
ls -altr /mnt/c/Users/Sheen/Downloads/dotfiles/
cp -r /mnt/c/Users/Sheen/Downloads/dotfiles/* .
ls -altr
cp /mnt/c/Users/Sheen/Downloads/dotfiles/* .
ls -altr
cp /mnt/c/Users/Sheen/Downloads/dotfiles/.zshrc .
cp /mnt/c/Users/Sheen/Downloads/dotfiles/.vimrc .
cp /mnt/c/Users/Sheen/Downloads/dotfiles/.viminfo .
cp -r /mnt/c/Users/Sheen/Downloads/dotfiles/.zsh .
ls -altr
source .zshrc
ls
ll
less .viminfo
vi .viminfo
rm .viminfo
ls
ls
ll
ls .zsh
ls
ls .zsh
ll .zsh
ls
ll
ls
apt install node js
upgrade
ls
git init --bare $HOME/.cfg
ls
ll
alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
config config --local status.showUntrackedFiles no
echo "alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'" >> $HOME/.zshrc
vi .zshrc
vi .zshrc
source .zshrc
config status
config add .vimrc
config add .zshrc
ll
git remote -v
config remote -v
config remote set url origin https://github.com/sheenjustin/dotfiles
config remote set-url origin https://github.com/sheenjustin/dotfiles
config remote add origin https://github.com/sheenjustin/dotfiles
config remote -v
config commit -ma 'Add dotfiles
config commit -ma 'Add dotfiles'
config commit -m 'Add dotfiles'
git config --global user.email 'sheenjustin@gmail.com'
git config --global user.name 'Sheen Justin'
config commit -m 'Add dotfiles'
git push
config push
config push --set-upstream origin master
ls
rm -rf zsh-syntax-highlighting
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
ls
source .zshrc
ll
config add zsh-syntax-highlighting
config submodule add https://github.com/zsh-users/zsh-syntax-highlighting.git zsh-syntax-highlighting
ls
ll
echo ".cfg" >> .gitignore
ls
ll
config add .gitconfig
config add .gitignore
config commit -a
git push
config push
vi .vimrc
source .vimrc
ls
vi .zshrc
vi .zshrc
vi .vimrc
vi .zshrc
vi .vimrc
vi .zshrc
vi .zshrc
vi .vimrc
vi .zshrc
git
echo $fpath
vi .zshrc
echo $PATH
vi .zshrc
echo $PATH
source .zshrc
echo $fpath
vi .zshrc
source .zshrc
vi .zshrc
echo $PATH
vi .zshrc
echo $PATH
source .zshrc
echo $PATH
echo $fpath
echo $fpath >> path.txt
vi path.txt
rm path.txt
ls
vi .zshrc
mkdir .zsh/funcs
ls .zsh
source .zshrc
vi .zshrc
source .zshrc
vi .zshrc
echo $HOME
source .zshrc
vi .zshrc
source .zshrc
mkdir bin
ls
ll
config add .zsh
ll .zsh/
vi .zshrc
vi .vimrc
vi .zshrc
source .zshrc
vi .zshrc
source .zshrc
git clone git clone https://github.com/denysdovhan/spaceship-prompt.git
git clone https://github.com/denysdovhan/spaceship-prompt.git
ls
ls spaceship-prompt
cd spaceship-prompt
ln -sf spaceship.zsh $HOME/.zsh/funcs/promt_spaceship_setup
ln -sf spaceship.zsh $HOME/.zsh/funcs/prompt_spaceship_setup
rm ../.zsh/funcs/promt_spaceship_setup
cd
vi .zshrc
source .zshrc
compaudit
vi .zshrc
source .zshrc
ls /home/sheen/.zsh/funcs/prompt_spaceship_setup
ls .zsh
sudo chmod -R 755 .zsh
source .zshrc
vi .zshrc
source .zshrc
vi .zshrc
source .zshrc
prompt 
ls .zsh
ls .zsh/funcs
ll .zsh
ls -altr .zsh
ls -altr .zsh/funcs
\:q
ls
ls spaceship-prompt
ls -altr spaceship-prompt
vi .zshrc
source .zshrc
vi .zshrc
source .zshrc
vi .zshrc
source .zshrc
vi .zshrc
source .zshrc
vi .zshrc
source .zshrc
prompt -h
prompt -h themes
prompt -h adam1
prompt -l
source .zshrc
ls .zsh/funcs
vi /home/sheen/.zsh/funcs/prompt_spaceship_setup
ls .zsh/funcs
rm .zsh/funcs/prompt_spaceship_setup
cd spaceship-prompt
ln -s spaceship.zsh ../.zsh/funcs/prompt_spaceship_setup
ln ../.zsh/funcs/prompt_spaceship_setup
ls ../.zsh/funcs/prompt_spaceship_setup
vi ../.zsh/funcs/prompt_spaceship_setup
ls ../.zsh/funcs/prompt_spaceship_setup
vi spaceship.zsh
man ln
rm ../.zsh/funcs/prompt_spaceship_setup
ln -s ../.zsh/funcs/prompt_spaceship_setup spaceship.zsh
ln -s spaceship.zsh '$HOME/.zsh/funcs/prompt_spaceship_setup'
ln -s spaceship.zsh '${HOME}/.zsh/funcs/prompt_spaceship_setup'
cd 
.zsh/funcs
ls
ln -s ../../spaceship-prompt/spaceship.zsh prompt_spaceship_setup
ls
vi prompt_spaceship_setup
...
ls
source .zshrc
prompt spaceship
ls
config
install fonts-powerline
pwd
exit
prompt spaceship
vi .zshrc
source .zshrc
ls
ls
git clone https://github.com/powerline/fonts.git
ls
cd fonts
./install.sh
cd ..
rm -r fonts
rm -rf fonts
ls
ls
ls
ls
ls
ls
ls
ls
ll
cd
ls
ll
cd .zsh
cd ../cfg
cd ../.cfg
ls
..
cd zsh-syntax-highlighting
ls
ssh 
ls
cd docs
ls
ll
cd ..
cd ..
ls
cd 
ls
exit
exi
exit
ls
cd zsh-syntax-highlighting
ls
cd 
zsh
cd zsh-syntax-highlighting
ls
cd tests
ls
cd ..
cd
vi .zshrc
ls
vi .zshrc
exit
