set nocompatible		" this is redundant, but I prefer explicit settings over implicit/default behavior 

"source $VIMRUNTIME/defaults.vim
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set history=1024 		" Sets how many lines of history VIM has to remember
set autoread			" Set to auto read when a file is changed from the outside

filetype plugin on		" Enable filetype plugins
filetype indent on

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Key maps
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader = " " 	" Setting map leader to :space: for extra key combinations
" Fast saving
nmap <leader>s :w!<cr>
nmap <leader>l :q<cr>

nmap <leader>h :set hlsearch!<cr>

" Split buffer commands, vertical, horizontal, equal, and close
nmap <leader>sv <C-w>v
nmap <leader>sh <C-w>s
nmap <leader>se <C-w>=
nmap <leader>sx <cmd>close<cr>

" Tab commands, open, close, next tab, previous tab
nmap <leader>to <cmd>tabnew<cr>
nmap <leader>tx <cmd>tabclose<cr>
nmap <leader>tn <cmd>tabn<cr>
nmap <leader>tp <cmd>tabp<cr>

" Escape insert mode without using escape key
imap jk <ESC>
imap kj <ESC>
vmap jk <ESC>
vmap kj <ESC>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Turn on the Wild menu
set wildmenu
if !has('nvim')			" I like neovims default wildmenu, these options are for vim
	set wildmode=list:longest,list:full
endif

set scrolloff=128		" Center cursor - when moving vertically using j/k
set ruler				" Always show current position
set cmdheight=1			" Height of the command bar

set ignorecase			" Ignore case when searching
set smartcase			" When searching try to be smart about cases 
set hlsearch			" Highlight search results
set incsearch			" Makes search act like search in modern browsers
set lazyredraw			" Don't redraw while executing macros (good performance config)
set magic				" For regular expressions turn magic on
set showmatch			" Show matching brackets when text indicator is over them
set matchtime=2			" How many tenths of a second to blink when matching brackets

set splitright
set splitbelow

set number relativenumber " Add numbers on the left
set numberwidth=4

set signcolumn=yes		" Always have sign column on
set updatetime=200		" Time to update sign column
set timeout				" explicitly set timeout
set timeoutlen=100		" Timeout for mapping 

set noerrorbells		" No annoying sound on errors
set novisualbell
set t_vb=
set tm=500

" Use absolute line numbers if in insert mode
:augroup numbertoggle
:  autocmd!
:  autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &nu && mode() != "i" | set rnu   | endif
:  autocmd BufLeave,FocusLost,InsertEnter,WinLeave   * if &nu                  | set nornu | endif
:augroup END

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax enable			" Enable syntax highlighting
set encoding=utf8		" Set utf8 as standard encoding and en_US as the standard language
set fileformats=unix,dos,mac	" Use Unix as the standard file type
set cursorline
set termguicolors

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Files, backups and undo
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Turn backup off, since most stuff is in SVN, git etc. anyway...
set nobackup
set nowritebackup
set noswapfile
set undofile

if !has('nvim')
	set undodir=~/.vim/undodir/vim/ " vim and neovim have incompatible undofile formats
	set viminfo+=n~/.vim/.viminfo " Same with viminfo
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set noexpandtab			"Use hard tabs always

set shiftwidth=4		" 1 tab == 4 spaces
set tabstop=4
set softtabstop=0		" Disable spaces for tabs

set linebreak			" Linebreak on 500 characters
set autoindent			" Auto indent
set smartindent			" Smart indent
set wrap				" Wrap lines

set backspace=eol,start,indent " Configure backspace so it acts as it should act
set whichwrap+=<,>,h,l

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Misc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:netrw_liststyle=3
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugin Stuff
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if !exists('$GIT_EXEC_PATH') " Run PlugInstall if there are missing plugins and not in a git instance
	autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
	  \| PlugInstall --sync | source $MYVIMRC
	\| endif
endif

" COC mappings
function! CheckBackspace() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" Use tab for trigger completion with characters ahead and navigate
" NOTE: There's always complete item selected by default, you may want to enable
" no select by `"suggest.noselect": true` in your configuration file
inoremap <silent><expr> <TAB> coc#pum#visible() ? coc#pum#next(1) : CheckBackspace() ? "\<Tab>" : coc#refresh()
inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"

" Make <CR> to accept selected completion item or notify coc.nvim to format
" <C-g>u breaks current undo, please make your own choice
inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm() : "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
" End COC mappings

" tpope/vim-commentary mappings
nmap <leader>/ <PLUG>CommentaryLine
vmap <leader>/ <PLUG>Commentary

call plug#begin()

" Plugins for both vim and neovim
Plug 'sheenjustin/vim-monokai-tasty'
Plug 'sheenjustin/cf-utils.vim'

Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-commentary'

Plug 'airblade/vim-gitgutter'

Plug 'neoclide/coc.nvim', { 'branch': 'release' }
Plug 'sunaku/tmux-navigate'

if !has('nvim')
	" Plugins only for vim. Neovim plugins are located in init.lua
	Plug 'nathanaelkane/vim-indent-guides'
	Plug 'vim-airline/vim-airline'
	Plug 'vim-airline/vim-airline-themes'
	" End vim-only plugins

	" Call plug#end for vim, neovim will call plug#end in init.lua
	call plug#end()

	" Configuration options for Vim only plugins
	let g:airline_powerline_fonts = 1 "enable airline arrows with powerline fonts
	let g:airline_theme='base16_monokai'

	"""""""""""""""""""""""""""""""""""""""""""""""""""""
	" Options below this must be replicated in			"
	" init.lua as well 									"
	"""""""""""""""""""""""""""""""""""""""""""""""""""""
	colorscheme vim-monokai-tasty
endif

