set nocompatible " this is redundant, but I prefer explicit settings over implicit/default behavior 
"source $VIMRUNTIME/defaults.vim
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set history=1024 		" Sets how many lines of history VIM has to remember

" Enable filetype plugins
filetype plugin on
filetype indent on

set autoread			" Set to auto read when a file is changed from the outside

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = " "

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Key maps
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Fast saving
nmap <leader>s :w!<cr>
nmap <leader>l :q<cr>

nmap <leader>h :set hlsearch!<cr>

" Split buffer commands, vertical, horizontal, equal, and close
nmap <leader>sv <C-w>v
nmap <leader>sh <C-w>s
nmap <leader>se <C-w>=
nmap <leader>sx <cmd>close<cr>

" Tab commands, open, close, next tab, previous tab
nmap <leader>to <cmd>tabnew<cr>
nmap <leader>tx <cmd>tabclose<cr>
nmap <leader>tn <cmd>tabn<cr>
nmap <leader>tp <cmd>tabp<cr>

" Escape insert mode without using escape key
imap jk <ESC>
imap kj <ESC>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set so=128				" Center cursor - when moving vertically using j/k

" Turn on the Wild menu
set wildmenu
if !has('nvim')
	set wildmode=list:longest,list:full
endif

set ruler				" Always show current position
set cmdheight=1			" Height of the command bar

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l
set backspace=2

set ignorecase			" Ignore case when searching
set smartcase			" When searching try to be smart about cases 
set hlsearch			" Highlight search results
set incsearch			" Makes search act like search in modern browsers
set lazyredraw			" Don't redraw while executing macros (good performance config)
set magic				" For regular expressions turn magic on
set showmatch			" Show matching brackets when text indicator is over them
set matchtime=2				" How many tenths of a second to blink when matching brackets

set splitright
set splitbelow

set timeout
set timeoutlen=100

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" Add numbers on the left
set number relativenumber
set numberwidth=4

" Use absolute line numbers if in insert mode
:augroup numbertoggle
:  autocmd!
:  autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &nu && mode() != "i" | set rnu   | endif
:  autocmd BufLeave,FocusLost,InsertEnter,WinLeave   * if &nu                  | set nornu | endif
:augroup END

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax enable			" Enable syntax highlighting
set encoding=utf8		" Set utf8 as standard encoding and en_US as the standard language
set ffs=unix,dos,mac	" Use Unix as the standard file type

set cursorline
set termguicolors

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Files, backups and undo
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Turn backup off, since most stuff is in SVN, git et.c anyway...
"set nobackup
"set nowb
"set noswapfile

if !has('nvim')
	set undodir=~/.vim/undodir/vim/
	set viminfo+=n~/.vim/.viminfo
endif

set undofile

set backupdir=~/.vim/backupdir/
set directory=~/.vim/backupdir/

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set noexpandtab			"Use hard tabs always

" 1 tab == 4 spaces
set shiftwidth=4
set tabstop=4
set softtabstop=0

set linebreak					" Linebreak on 500 characters
set autoindent					" Auto indent
set smartindent					" Smart indent
set wrap				" Wrap lines

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Misc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:netrw_liststyle=3
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugin Stuff
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Run PlugInstall if there are missing plugins
if !exists('$GIT_EXEC_PATH')
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif
endif

call plug#begin()

Plug 'sheenjustin/vim-monokai-tasty'
Plug 'sheenjustin/cf-utils.vim'

Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-commentary'

Plug 'airblade/vim-gitgutter'

Plug 'neoclide/coc.nvim', { 'branch': 'release' }
Plug 'sunaku/tmux-navigate'

if !has('nvim')
	Plug 'nathanaelkane/vim-indent-guides'
	Plug 'vim-airline/vim-airline'
	Plug 'vim-airline/vim-airline-themes'
endif

" Would love to move these to init.lua but can't seem to be able to call
" plug#begin twice
if has('nvim')
	Plug 'nvim-lua/plenary.nvim'
	Plug 'kkharji/sqlite.lua'
	Plug 'nvim-tree/nvim-web-devicons'

	Plug 'nvim-lualine/lualine.nvim'
	Plug 'lukas-reineke/indent-blankline.nvim'
	Plug 'f-person/git-blame.nvim'
	
	Plug 'mrjones2014/legendary.nvim'
	Plug 'folke/which-key.nvim'

	Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
	Plug 'nvim-telescope/telescope.nvim', { 'branch': '0.1.x' }
	Plug 'nvim-telescope/telescope-file-browser.nvim'
	Plug 'fannheyward/telescope-coc.nvim'
endif

call plug#end()

colorscheme vim-monokai-tasty

" Using tpope/vim-commentary
nmap <leader>/ gcc

inoremap <silent><expr> <cr> coc#pum#visible() ? coc#_select_confirm() : "\<C-g>u\<CR>"

if !has('nvim')
	"enable airline arrows with powerline fonts
	let g:airline_powerline_fonts = 1
	let g:airline_theme='base16_monokai'
endif

